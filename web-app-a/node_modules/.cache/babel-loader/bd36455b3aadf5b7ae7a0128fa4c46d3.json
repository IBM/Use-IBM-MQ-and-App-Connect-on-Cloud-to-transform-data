{"ast":null,"code":"\"use strict\";\n\nif (typeof Object.assign !== \"function\") {\n  Object.assign = function (target) {\n    if (!target) {\n      throw TypeError(\"Cannot convert undefined or null to object\");\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var _loop = function _loop() {\n      var source = _args[_i];\n\n      if (source) {\n        Object.keys(source).forEach(function (key) {\n          return target[key] = source[key];\n        });\n      }\n    };\n\n    for (var _i = 0, _args = args; _i < _args.length; _i++) {\n      _loop();\n    }\n\n    return target;\n  };\n}","map":{"version":3,"sources":["/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/carbon-components-react/node_modules/flatpickr/dist/esm/utils/polyfills.js"],"names":["Object","assign","target","TypeError","args","source","keys","forEach","key"],"mappings":"AAAA;;AACA,IAAI,OAAOA,MAAM,CAACC,MAAd,KAAyB,UAA7B,EAAyC;AACrCD,EAAAA,MAAM,CAACC,MAAP,GAAgB,UAAUC,MAAV,EAA2B;AACvC,QAAI,CAACA,MAAL,EAAa;AACT,YAAMC,SAAS,CAAC,4CAAD,CAAf;AACH;;AAHsC,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAAA;AAIlC,UAAMC,MAAM,YAAZ;;AACD,UAAIA,MAAJ,EAAY;AACRL,QAAAA,MAAM,CAACM,IAAP,CAAYD,MAAZ,EAAoBE,OAApB,CAA4B,UAACC,GAAD;AAAA,iBAAUN,MAAM,CAACM,GAAD,CAAN,GAAcH,MAAM,CAACG,GAAD,CAA9B;AAAA,SAA5B;AACH;AAPkC;;AAIvC,6BAAqBJ,IAArB,2BAA2B;AAAA;AAI1B;;AACD,WAAOF,MAAP;AACH,GAVD;AAWH","sourcesContent":["\"use strict\";\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target, ...args) {\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        for (const source of args) {\n            if (source) {\n                Object.keys(source).forEach((key) => (target[key] = source[key]));\n            }\n        }\n        return target;\n    };\n}\n"]},"metadata":{},"sourceType":"script"}