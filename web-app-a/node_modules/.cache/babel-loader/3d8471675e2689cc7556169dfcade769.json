{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { keys, match, matches } from '../../internal/keyboard';\nimport uniqueId from '../../tools/uniqueId';\nvar prefix = settings.prefix;\nexport default function TreeView(_ref) {\n  var prespecifiedActive = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$hideLabel = _ref.hideLabel,\n      hideLabel = _ref$hideLabel === void 0 ? false : _ref$hideLabel,\n      label = _ref.label,\n      multiselect = _ref.multiselect,\n      onSelect = _ref.onSelect,\n      _ref$selected = _ref.selected,\n      preselected = _ref$selected === void 0 ? [] : _ref$selected,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'default' : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"active\", \"children\", \"className\", \"hideLabel\", \"label\", \"multiselect\", \"onSelect\", \"selected\", \"size\"]);\n\n  var _useRef = useRef(rest.id || uniqueId()),\n      treeId = _useRef.current;\n\n  var treeClasses = classNames(className, \"\".concat(prefix, \"--tree\"), _defineProperty({}, \"\".concat(prefix, \"--tree--\").concat(size), size !== 'default'));\n  var treeRootRef = useRef(null);\n  var treeWalker = useRef(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current);\n\n  var _useState = useState(preselected),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(prespecifiedActive),\n      _useState4 = _slicedToArray(_useState3, 2),\n      active = _useState4[0],\n      setActive = _useState4[1];\n\n  function resetNodeTabIndices() {\n    var _treeRootRef$current$, _treeRootRef$current;\n\n    Array.prototype.forEach.call((_treeRootRef$current$ = treeRootRef === null || treeRootRef === void 0 ? void 0 : (_treeRootRef$current = treeRootRef.current) === null || _treeRootRef$current === void 0 ? void 0 : _treeRootRef$current.querySelectorAll('[tabIndex=\"0\"]')) !== null && _treeRootRef$current$ !== void 0 ? _treeRootRef$current$ : [], function (item) {\n      item.tabIndex = -1;\n    });\n  }\n\n  function handleTreeSelect(event) {\n    var node = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var nodeId = node.id;\n\n    if (multiselect && (event.metaKey || event.ctrlKey)) {\n      if (!selected.includes(nodeId)) {\n        setSelected(selected.concat(nodeId));\n      } else {\n        setSelected(selected.filter(function (selectedId) {\n          return selectedId !== nodeId;\n        }));\n      }\n    } else {\n      setSelected([nodeId]);\n      setActive(nodeId);\n    }\n\n    if (onSelect) {\n      onSelect(event, node);\n    }\n  }\n\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      var _treeRootRef$current2;\n\n      var currentFocusedNode = event.relatedTarget,\n          prevFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current2 = treeRootRef.current) !== null && _treeRootRef$current2 !== void 0 && _treeRootRef$current2.contains(currentFocusedNode)) {\n        prevFocusedNode.tabIndex = -1;\n      }\n    }\n\n    if (event.type === 'focus') {\n      var _treeRootRef$current3;\n\n      resetNodeTabIndices();\n      var _prevFocusedNode = event.relatedTarget,\n          _currentFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current3 = treeRootRef.current) !== null && _treeRootRef$current3 !== void 0 && _treeRootRef$current3.contains(_prevFocusedNode)) {\n        _prevFocusedNode.tabIndex = -1;\n      }\n\n      _currentFocusedNode.tabIndex = 0;\n    }\n  }\n\n  var focusTarget = false;\n  var nodesWithProps = React.Children.map(children, function (node) {\n    var sharedNodeProps = {\n      active: active,\n      depth: 0,\n      onNodeFocusEvent: handleFocusEvent,\n      onTreeSelect: handleTreeSelect,\n      selected: selected,\n      tabIndex: !node.props.disabled && -1 || null\n    };\n\n    if (!focusTarget && !node.props.disabled) {\n      sharedNodeProps.tabIndex = 0;\n      focusTarget = true;\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(node)) {\n      return /*#__PURE__*/React.cloneElement(node, sharedNodeProps);\n    }\n  });\n\n  function handleKeyDown(event) {\n    event.stopPropagation();\n\n    if (matches(event, [keys.ArrowUp, keys.ArrowDown])) {\n      event.preventDefault();\n    }\n\n    treeWalker.current.currentNode = event.target;\n    var nextFocusNode;\n\n    if (match(event, keys.ArrowUp)) {\n      nextFocusNode = treeWalker.current.previousNode();\n    }\n\n    if (match(event, keys.ArrowDown)) {\n      nextFocusNode = treeWalker.current.nextNode();\n    }\n\n    if (nextFocusNode && nextFocusNode !== event.target) {\n      resetNodeTabIndices();\n      nextFocusNode.tabIndex = 0;\n      nextFocusNode.focus();\n    }\n\n    if (rest.onKeyDown) {\n      rest.onKeyDown(event);\n    }\n  }\n\n  useEffect(function () {\n    var _treeWalker$current;\n\n    treeWalker.current = (_treeWalker$current = treeWalker.current) !== null && _treeWalker$current !== void 0 ? _treeWalker$current : document.createTreeWalker(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current, NodeFilter.SHOW_ELEMENT, {\n      acceptNode: function acceptNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-node--disabled\"))) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if (node.matches(\"li.\".concat(prefix, \"--tree-node\"))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    });\n  }, []);\n  useEffect(function () {\n    if (preselected.length) {\n      setSelected(preselected);\n    }\n\n    if (prespecifiedActive) {\n      setActive(prespecifiedActive);\n    }\n  }, [preselected, prespecifiedActive]);\n  var labelId = \"\".concat(treeId, \"__label\");\n\n  var TreeLabel = function TreeLabel() {\n    return !hideLabel && /*#__PURE__*/React.createElement(\"label\", {\n      id: labelId,\n      className: \"\".concat(prefix, \"--label\")\n    }, label);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TreeLabel, null), /*#__PURE__*/React.createElement(\"ul\", _extends({}, rest, {\n    \"aria-label\": hideLabel ? label : null,\n    \"aria-labelledby\": !hideLabel ? labelId : null,\n    \"aria-multiselectable\": multiselect || null,\n    className: treeClasses,\n    onKeyDown: handleKeyDown,\n    ref: treeRootRef,\n    role: \"tree\"\n  }), nodesWithProps));\n}\nTreeView.propTypes = {\n  /**\n   * Mark the active node in the tree, represented by its value\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify the children of the TreeView\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the TreeView\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether or not the label should be hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide the label text that will be read by a screen reader\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Specify the selection mode of the tree.\n   * If `multiselect` is `false` then only one node can be selected at a time\n   */\n  multiselect: PropTypes.bool,\n\n  /**\n   * Callback function that is called when any node is seleected\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Array representing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Specify the size of the tree from a list of available sizes.\n   */\n  size: PropTypes.oneOf(['default', 'compact'])\n};","map":{"version":3,"sources":["/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/carbon-components-react/es/components/TreeView/TreeView.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_defineProperty","obj","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","useEffect","useRef","useState","PropTypes","classNames","settings","match","matches","uniqueId","prefix","TreeView","_ref","prespecifiedActive","active","children","className","_ref$hideLabel","hideLabel","label","multiselect","onSelect","_ref$selected","selected","preselected","_ref$size","size","rest","_useRef","id","treeId","current","treeClasses","concat","treeRootRef","treeWalker","_useState","_useState2","setSelected","_useState3","_useState4","setActive","resetNodeTabIndices","_treeRootRef$current$","_treeRootRef$current","forEach","querySelectorAll","item","tabIndex","handleTreeSelect","event","node","undefined","nodeId","metaKey","ctrlKey","includes","filter","selectedId","handleFocusEvent","type","_treeRootRef$current2","currentFocusedNode","relatedTarget","prevFocusedNode","contains","_treeRootRef$current3","_prevFocusedNode","_currentFocusedNode","focusTarget","nodesWithProps","Children","map","sharedNodeProps","depth","onNodeFocusEvent","onTreeSelect","props","disabled","isValidElement","cloneElement","handleKeyDown","stopPropagation","ArrowUp","ArrowDown","preventDefault","currentNode","nextFocusNode","previousNode","nextNode","focus","onKeyDown","_treeWalker$current","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","classList","FILTER_REJECT","FILTER_ACCEPT","FILTER_SKIP","labelId","TreeLabel","createElement","Fragment","ref","role","propTypes","oneOfType","string","number","bool","isRequired","func","arrayOf","oneOf"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nimport { keys, match, matches } from '../../internal/keyboard';\nimport uniqueId from '../../tools/uniqueId';\nvar prefix = settings.prefix;\nexport default function TreeView(_ref) {\n  var prespecifiedActive = _ref.active,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$hideLabel = _ref.hideLabel,\n      hideLabel = _ref$hideLabel === void 0 ? false : _ref$hideLabel,\n      label = _ref.label,\n      multiselect = _ref.multiselect,\n      onSelect = _ref.onSelect,\n      _ref$selected = _ref.selected,\n      preselected = _ref$selected === void 0 ? [] : _ref$selected,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'default' : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"active\", \"children\", \"className\", \"hideLabel\", \"label\", \"multiselect\", \"onSelect\", \"selected\", \"size\"]);\n\n  var _useRef = useRef(rest.id || uniqueId()),\n      treeId = _useRef.current;\n\n  var treeClasses = classNames(className, \"\".concat(prefix, \"--tree\"), _defineProperty({}, \"\".concat(prefix, \"--tree--\").concat(size), size !== 'default'));\n  var treeRootRef = useRef(null);\n  var treeWalker = useRef(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current);\n\n  var _useState = useState(preselected),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(prespecifiedActive),\n      _useState4 = _slicedToArray(_useState3, 2),\n      active = _useState4[0],\n      setActive = _useState4[1];\n\n  function resetNodeTabIndices() {\n    var _treeRootRef$current$, _treeRootRef$current;\n\n    Array.prototype.forEach.call((_treeRootRef$current$ = treeRootRef === null || treeRootRef === void 0 ? void 0 : (_treeRootRef$current = treeRootRef.current) === null || _treeRootRef$current === void 0 ? void 0 : _treeRootRef$current.querySelectorAll('[tabIndex=\"0\"]')) !== null && _treeRootRef$current$ !== void 0 ? _treeRootRef$current$ : [], function (item) {\n      item.tabIndex = -1;\n    });\n  }\n\n  function handleTreeSelect(event) {\n    var node = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var nodeId = node.id;\n\n    if (multiselect && (event.metaKey || event.ctrlKey)) {\n      if (!selected.includes(nodeId)) {\n        setSelected(selected.concat(nodeId));\n      } else {\n        setSelected(selected.filter(function (selectedId) {\n          return selectedId !== nodeId;\n        }));\n      }\n    } else {\n      setSelected([nodeId]);\n      setActive(nodeId);\n    }\n\n    if (onSelect) {\n      onSelect(event, node);\n    }\n  }\n\n  function handleFocusEvent(event) {\n    if (event.type === 'blur') {\n      var _treeRootRef$current2;\n\n      var currentFocusedNode = event.relatedTarget,\n          prevFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current2 = treeRootRef.current) !== null && _treeRootRef$current2 !== void 0 && _treeRootRef$current2.contains(currentFocusedNode)) {\n        prevFocusedNode.tabIndex = -1;\n      }\n    }\n\n    if (event.type === 'focus') {\n      var _treeRootRef$current3;\n\n      resetNodeTabIndices();\n      var _prevFocusedNode = event.relatedTarget,\n          _currentFocusedNode = event.target;\n\n      if (treeRootRef !== null && treeRootRef !== void 0 && (_treeRootRef$current3 = treeRootRef.current) !== null && _treeRootRef$current3 !== void 0 && _treeRootRef$current3.contains(_prevFocusedNode)) {\n        _prevFocusedNode.tabIndex = -1;\n      }\n\n      _currentFocusedNode.tabIndex = 0;\n    }\n  }\n\n  var focusTarget = false;\n  var nodesWithProps = React.Children.map(children, function (node) {\n    var sharedNodeProps = {\n      active: active,\n      depth: 0,\n      onNodeFocusEvent: handleFocusEvent,\n      onTreeSelect: handleTreeSelect,\n      selected: selected,\n      tabIndex: !node.props.disabled && -1 || null\n    };\n\n    if (!focusTarget && !node.props.disabled) {\n      sharedNodeProps.tabIndex = 0;\n      focusTarget = true;\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(node)) {\n      return /*#__PURE__*/React.cloneElement(node, sharedNodeProps);\n    }\n  });\n\n  function handleKeyDown(event) {\n    event.stopPropagation();\n\n    if (matches(event, [keys.ArrowUp, keys.ArrowDown])) {\n      event.preventDefault();\n    }\n\n    treeWalker.current.currentNode = event.target;\n    var nextFocusNode;\n\n    if (match(event, keys.ArrowUp)) {\n      nextFocusNode = treeWalker.current.previousNode();\n    }\n\n    if (match(event, keys.ArrowDown)) {\n      nextFocusNode = treeWalker.current.nextNode();\n    }\n\n    if (nextFocusNode && nextFocusNode !== event.target) {\n      resetNodeTabIndices();\n      nextFocusNode.tabIndex = 0;\n      nextFocusNode.focus();\n    }\n\n    if (rest.onKeyDown) {\n      rest.onKeyDown(event);\n    }\n  }\n\n  useEffect(function () {\n    var _treeWalker$current;\n\n    treeWalker.current = (_treeWalker$current = treeWalker.current) !== null && _treeWalker$current !== void 0 ? _treeWalker$current : document.createTreeWalker(treeRootRef === null || treeRootRef === void 0 ? void 0 : treeRootRef.current, NodeFilter.SHOW_ELEMENT, {\n      acceptNode: function acceptNode(node) {\n        if (node.classList.contains(\"\".concat(prefix, \"--tree-node--disabled\"))) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if (node.matches(\"li.\".concat(prefix, \"--tree-node\"))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    });\n  }, []);\n  useEffect(function () {\n    if (preselected.length) {\n      setSelected(preselected);\n    }\n\n    if (prespecifiedActive) {\n      setActive(prespecifiedActive);\n    }\n  }, [preselected, prespecifiedActive]);\n  var labelId = \"\".concat(treeId, \"__label\");\n\n  var TreeLabel = function TreeLabel() {\n    return !hideLabel && /*#__PURE__*/React.createElement(\"label\", {\n      id: labelId,\n      className: \"\".concat(prefix, \"--label\")\n    }, label);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TreeLabel, null), /*#__PURE__*/React.createElement(\"ul\", _extends({}, rest, {\n    \"aria-label\": hideLabel ? label : null,\n    \"aria-labelledby\": !hideLabel ? labelId : null,\n    \"aria-multiselectable\": multiselect || null,\n    className: treeClasses,\n    onKeyDown: handleKeyDown,\n    ref: treeRootRef,\n    role: \"tree\"\n  }), nodesWithProps));\n}\nTreeView.propTypes = {\n  /**\n   * Mark the active node in the tree, represented by its value\n   */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify the children of the TreeView\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the TreeView\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether or not the label should be hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide the label text that will be read by a screen reader\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Specify the selection mode of the tree.\n   * If `multiselect` is `false` then only one node can be selected at a time\n   */\n  multiselect: PropTypes.bool,\n\n  /**\n   * Callback function that is called when any node is seleected\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Array representing all selected node IDs in the tree\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * Specify the size of the tree from a list of available sizes.\n   */\n  size: PropTypes.oneOf(['default', 'compact'])\n};"]},"metadata":{},"sourceType":"module"}