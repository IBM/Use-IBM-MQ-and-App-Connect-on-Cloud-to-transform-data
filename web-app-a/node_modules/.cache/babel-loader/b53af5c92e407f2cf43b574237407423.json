{"ast":null,"code":"import _defineProperty from\"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Table,TableHeader,TableRow,TableBody,TableCell,TableHead}from'carbon-components-react';import{Button,Loading,InlineLoading,FormGroup,TextInput}from'carbon-components-react';import axios from'axios';import ReactJson from'react-json-view';import _ from'lodash';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Landing=/*#__PURE__*/function(_React$Component){_inherits(Landing,_React$Component);var _super=_createSuper(Landing);function Landing(){var _this;_classCallCheck(this,Landing);_this=_super.call(this);_this.componentDidMount=function(){axios.get(\"\".concat(window.location.protocol,\"//\").concat(window.location.hostname,\":\").concat(window.location.port,\"/getMessageList?q=inputC\")).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(res.data.data);// var msg = res.data.data.messages\n// console.log(msg)\n// var arr = await msg.map(item =>{\n//     item.message = \n//         <div>\n//             {this.state.messageLoading[item.messageId]?\n//                 <InlineLoading description=\"Loading...\" />\n//                 :\n//                 <Button style={{margin:\".5rem\"}} onClick={()=>this.getMessage(item.messageId)}>Fetch</Button>\n//             }\n//         </div>\n//     return item\n// })\n// this.setState({data: arr, loading: false})\ncase 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};_this.handleChange=function(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;// console.log(name, value)\n_this.setState(_defineProperty({},name,value));};_this.handleSyncSubmit=function(e){// let correlationId = _.times(48, () => (Math.random()*0xF<<0).toString(16)).join('');\ne.preventDefault();var data={message:{container_num:_this.state.input},q:\"tq2\"// correlationId: correlationId,\n};axios.post(\"\".concat(window.location.protocol,\"//\").concat(window.location.hostname,\":\").concat(window.location.port,\"/postMessage\"),data).then(function(res){console.log(res.data);// alert(\"Data submitted with submission ID: \" + res.data.messageId)\nvar arr=_this.state.data;var newData={seqNo:_this.state.seqNo,messageId:res.data.messageId,// correlationId: correlationId,\nmessage:[/*#__PURE__*/_jsx(\"div\",{children:_this.state.messageLoading[res.data.messageId]?/*#__PURE__*/_jsx(InlineLoading,{description:\"Loading...\"}):/*#__PURE__*/_jsx(Button,{style:{margin:\".5rem\"},onClick:function onClick(){return _this.handleFetch(res.data.messageId);},children:\"Fetch\"})})]};arr.push(newData);_this.setState({input:\"\",seqNo:newData.seqNo+1,data:arr});});};_this.handleFetch=function(cid){// console.log(this.state.messageLoading)\n// var loadState = this.state.messageLoading\n// loadState[cid] = true\n// console.log(loadState)\n// this.setState({messageLoading: loadState})\naxios.get(\"\".concat(window.location.protocol,\"//\").concat(window.location.hostname,\":\").concat(window.location.port,\"/getMessageFromC?q=outputC&id=\").concat(cid)).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res){var arr;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(res.data.data);_context2.next=3;return _this.state.data.map(function(item){if(item.messageId===cid)if(res.data.data)item.message=JSON.stringify(res.data.data);else alert('No data found');return item;});case 3:arr=_context2.sent;_this.setState({data:arr,loading:false});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};_this.state={headers:[{key:\"seqNo\",header:\"Seq. No\"},{key:\"messageId\",header:\"Message ID\"},// {\n//     key:\"correlationId\",\n//     header:\"Correlation ID\"\n// },\n{key:\"message\",header:\"Message\"}],seqNo:1,data:[],loading:false,messageLoading:{}};return _this;}_createClass(Landing,[{key:\"render\",value:function render(){return this.state.loading?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Loading,{description:\"Active loading indicator\",withOverlay:false})}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(FormGroup,{legendText:\"Sync Call\",style:{minWidth:'400px'},children:[/*#__PURE__*/_jsx(TextInput,{id:\"one\",name:\"input\",value:this.state.input,labelText:\"Enter Container Num\",onChange:this.handleChange,placeholder:\"Enter Container Number\",style:{marginBottom:'1rem'}}),/*#__PURE__*/_jsx(Button,{onClick:this.handleSyncSubmit,children:\"Submit\"})]})}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"50rem\",textAlign:\"left\"},children:this.state.toDisplay?/*#__PURE__*/_jsx(ReactJson,{src:this.state.toDisplay,theme:\"solarized\"}):/*#__PURE__*/_jsx(_Fragment,{})}),this.state.data.length>0?/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsx(TableRow,{children:this.state.headers.map(function(header){return/*#__PURE__*/_jsx(TableHeader,{children:header.header},header.key);})})}),/*#__PURE__*/_jsx(TableBody,{children:this.state.data.map(function(row){return/*#__PURE__*/_jsx(TableRow,{children:Object.keys(row).map(function(key){// console.log(key)\nreturn/*#__PURE__*/_jsx(TableCell,{children:row[key]},key);})},row.key);})})]}):/*#__PURE__*/_jsx(_Fragment,{})]});}}]);return Landing;}(React.Component);;export default Landing;","map":{"version":3,"sources":["/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/src/components/Landing/Landing.js"],"names":["React","Table","TableHeader","TableRow","TableBody","TableCell","TableHead","Button","Loading","InlineLoading","FormGroup","TextInput","axios","ReactJson","_","Landing","componentDidMount","get","window","location","protocol","hostname","port","then","res","console","log","data","handleChange","e","target","name","value","setState","handleSyncSubmit","preventDefault","message","container_num","state","input","q","post","arr","newData","seqNo","messageId","messageLoading","margin","handleFetch","push","cid","map","item","JSON","stringify","alert","loading","headers","key","header","minWidth","marginBottom","width","textAlign","toDisplay","length","row","Object","keys","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Table, TableHeader, TableRow, TableBody, TableCell, TableHead} from 'carbon-components-react'\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios'\nimport ReactJson from 'react-json-view'\nimport _ from 'lodash'\n\nclass Landing extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            headers:[\n                {\n                    key:\"seqNo\",\n                    header:\"Seq. No\"\n                },\n                {\n                    key:\"messageId\",\n                    header:\"Message ID\"\n                },\n                // {\n                //     key:\"correlationId\",\n                //     header:\"Correlation ID\"\n                // },\n                {\n                    key:\"message\",\n                    header:\"Message\"\n                }\n            ],\n            seqNo:1,\n            data:[],\n            loading: false, \n            messageLoading:{}\n        }\n    }\n\n    componentDidMount = ()=>{\n        axios.get(`${window.location.protocol}//${window.location.hostname}:${window.location.port}/getMessageList?q=inputC`).then(async res=>{\n            console.log(res.data.data)\n            // var msg = res.data.data.messages\n            // console.log(msg)\n            // var arr = await msg.map(item =>{\n            //     item.message = \n            //         <div>\n            //             {this.state.messageLoading[item.messageId]?\n            //                 <InlineLoading description=\"Loading...\" />\n            //                 :\n            //                 <Button style={{margin:\".5rem\"}} onClick={()=>this.getMessage(item.messageId)}>Fetch</Button>\n            //             }\n            //         </div>\n            //     return item\n            // })\n            // this.setState({data: arr, loading: false})\n        })\n    }\n\n    handleChange = (e)=>{\n        const { name, value } = e.target\n        // console.log(name, value)\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSyncSubmit = (e)=>{\n\n        // let correlationId = _.times(48, () => (Math.random()*0xF<<0).toString(16)).join('');\n\n        e.preventDefault()\n        const data = {\n            message: { container_num: this.state.input},\n            q:\"tq2\",\n            // correlationId: correlationId,\n        }\n\n        axios.post(`${window.location.protocol}//${window.location.hostname}:${window.location.port}/postMessage`, data)\n        .then(res=>{\n            console.log(res.data)\n            // alert(\"Data submitted with submission ID: \" + res.data.messageId)\n            var arr = this.state.data\n            const newData = {\n                seqNo: this.state.seqNo,\n                messageId: res.data.messageId,\n                // correlationId: correlationId,\n                message: [\n                    <div>\n                        {this.state.messageLoading[res.data.messageId]?\n                            <InlineLoading description=\"Loading...\" />\n                            :\n                            <Button style={{margin:\".5rem\"}} onClick={()=>this.handleFetch(res.data.messageId)}>Fetch</Button>\n                        }\n                    </div>\n                ]\n            }\n            arr.push(newData)\n            this.setState({input:\"\", seqNo: newData.seqNo+1, data:arr})\n        })\n    }\n\n    handleFetch = (cid) =>{\n        // console.log(this.state.messageLoading)\n        // var loadState = this.state.messageLoading\n        // loadState[cid] = true\n        // console.log(loadState)\n        // this.setState({messageLoading: loadState})\n        axios.get(`${window.location.protocol}//${window.location.hostname}:${window.location.port}/getMessageFromC?q=outputC&id=${cid}`).then(async res=>{\n            console.log(res.data.data)\n            var arr = await this.state.data.map(item =>{\n                if(item.messageId === cid)\n                    if(res.data.data)\n                        item.message = JSON.stringify(res.data.data)\n                    else\n                        alert('No data found')\n                return item\n            })\n        this.setState({data: arr, loading: false})\n        })\n    }\n\n    render(){\n      return (\n        this.state.loading?\n        <div>\n            <Loading\n            description=\"Active loading indicator\" withOverlay={false}\n            />        \n        </div>\n          : \n        <div>\n            <div>\n            <FormGroup legendText=\"Sync Call\" style={{ minWidth: '400px' }}>\n                <TextInput\n                id=\"one\"\n                name=\"input\"\n                value={this.state.input}\n                labelText=\"Enter Container Num\"\n                onChange={this.handleChange}\n                placeholder=\"Enter Container Number\"\n                style={{ marginBottom: '1rem' }}\n                />\n                <Button onClick={this.handleSyncSubmit}>Submit</Button>\n            </FormGroup>\n            </div>\n            <div style={{width:\"50rem\", textAlign:\"left\"}}>\n                {this.state.toDisplay?\n                    <ReactJson \n                        src={this.state.toDisplay} \n                        theme=\"solarized\"\n                    />\n                :\n                <></>\n                }\n            </div>\n            {\n                this.state.data.length>0?\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                        {this.state.headers.map((header) => (\n                            <TableHeader key={header.key}>{header.header}</TableHeader>\n                        ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.data.map((row) => (\n                        <TableRow key={row.key}>\n                            {Object.keys(row)\n                            .map((key) => {\n                                // console.log(key)\n                                return <TableCell key={key}>{row[key]}</TableCell>;\n                            })}\n                        </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>           \n                :\n                <></>\n            }\n        </div>\n      )\n    }\n};\nexport default Landing;"]},"metadata":{},"sourceType":"module"}