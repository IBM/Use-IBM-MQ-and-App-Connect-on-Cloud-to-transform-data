{"ast":null,"code":"var _jsxFileName = \"/Users/kushagra/IBM/IBM MQ/app/web-app-a/src/components/Landing/Landing.js\";\nimport React from 'react';\nimport { Table, TableHeader, TableRow, TableBody, TableCell, TableHead } from 'carbon-components-react';\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios';\nimport JSONViewer from 'react-json-viewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target; // console.log(name, value)\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSyncSubmit = e => {\n      e.preventDefault(); // console.log(this.state.input)\n\n      const data = {\n        container_num: this.state.sync\n      };\n      axios.post(`http://localhost:8080/postSyncMessage`, data).then(res => {\n        console.log(res.data);\n        alert(\"Data submitted with submission ID: \" + res.data.messageId);\n        this.setState({\n          sync: \"\"\n        }); // var data = this.state.data\n        // data = data.map(item =>{\n        //     if(item.messageId === id){\n        //         item.message = res.data.data\n        //         var loadState = this.state.messageLoading\n        //         loadState[id] = false\n        //         this.setState({messageLoading:loadState})\n        //     }\n        //     return item\n        // })\n      });\n    };\n\n    this.state = {\n      headers: ['Seq. No', 'messageId', 'Message'],\n      loading: true,\n      messageLoading: {}\n    };\n  }\n\n  render() {\n    return this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        description: \"Active loading indicator\",\n        withOverlay: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          legendText: \"Sync Call\",\n          style: {\n            minWidth: '400px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            id: \"one\",\n            name: \"sync\",\n            value: this.state.sync,\n            labelText: \"Enter Container Num\",\n            onChange: this.handleChange,\n            placeholder: \"Enter Container Number\",\n            style: {\n              marginBottom: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleSyncSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(JSONViewer, {\n          json: [{\n            task: 'Learn React',\n            done: true\n          }, {\n            task: 'Write Book',\n            done: false\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Landing;","map":{"version":3,"sources":["/Users/kushagra/IBM/IBM MQ/app/web-app-a/src/components/Landing/Landing.js"],"names":["React","Table","TableHeader","TableRow","TableBody","TableCell","TableHead","Button","Loading","InlineLoading","FormGroup","TextInput","axios","JSONViewer","Landing","Component","constructor","handleChange","e","name","value","target","setState","handleSyncSubmit","preventDefault","data","container_num","state","sync","post","then","res","console","log","alert","messageId","headers","loading","messageLoading","render","minWidth","marginBottom","task","done"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Table, TableHeader, TableRow, TableBody, TableCell, TableHead} from 'carbon-components-react'\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios'\nimport JSONViewer from 'react-json-viewer';\n\nclass Landing extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            headers:[\n                'Seq. No',\n                'messageId',\n                'Message'\n            ],\n            loading: true, \n            messageLoading:{}\n        }\n    }\n\n    handleChange = (e)=>{\n        const { name, value } = e.target\n        // console.log(name, value)\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSyncSubmit = (e)=>{\n        e.preventDefault()\n        // console.log(this.state.input)\n        const data = {\n            container_num: this.state.sync\n        }\n        axios.post(`http://localhost:8080/postSyncMessage`, data).then(res=>{\n            console.log(res.data)\n            alert(\"Data submitted with submission ID: \" + res.data.messageId)\n            this.setState({sync:\"\"})\n            // var data = this.state.data\n            // data = data.map(item =>{\n            //     if(item.messageId === id){\n            //         item.message = res.data.data\n            //         var loadState = this.state.messageLoading\n            //         loadState[id] = false\n            //         this.setState({messageLoading:loadState})\n            //     }\n            //     return item\n            // })\n        })\n    }\n\n    render(){\n      return (\n        this.state.loading?\n        <div>\n            <Loading\n            description=\"Active loading indicator\" withOverlay={false}\n            />        \n        </div>\n          : \n        <div>\n            <div>\n            <FormGroup legendText=\"Sync Call\" style={{ minWidth: '400px' }}>\n                <TextInput\n                id=\"one\"\n                name=\"sync\"\n                value={this.state.sync}\n                labelText=\"Enter Container Num\"\n                onChange={this.handleChange}\n                placeholder=\"Enter Container Number\"\n                style={{ marginBottom: '1rem' }}\n                />\n                <Button onClick={this.handleSyncSubmit}>Submit</Button>\n            </FormGroup>\n            </div>\n            <div>\n            <JSONViewer\n                json={[\n                {\n                    task: 'Learn React',\n                    done: true,\n                },\n                {\n                    task: 'Write Book',\n                    done: false,\n                },\n                ]}\n            />\n            </div>\n        </div>\n      )\n    }\n};\nexport default Landing;"]},"metadata":{},"sourceType":"module"}