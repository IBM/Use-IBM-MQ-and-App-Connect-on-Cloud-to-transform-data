{"ast":null,"code":"var _jsxFileName = \"/Users/kushagra/IBM/IBM MQ/app/web-app-a/src/components/Landing/Landing.js\";\nimport React from 'react';\nimport { Table, TableHeader, TableRow, TableBody, TableCell, TableHead } from 'carbon-components-react';\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios';\nimport ReactJson from 'react-json-view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {// axios.get('http://localhost:8080/getMessageList?q=testQ').then(async res=>{\n      //     console.log(res.data.data)\n      //     var msg = res.data.data.messages\n      //     console.log(msg)\n      //     var arr = await msg.map(item =>{\n      //         item.message = \n      //             <div>\n      //                 {this.state.messageLoading[item.messageId]?\n      //                     <InlineLoading description=\"Loading...\" />\n      //                     :\n      //                     <Button style={{margin:\".5rem\"}} onClick={()=>this.getMessage(item.messageId)}>Fetch</Button>\n      //                 }\n      //             </div>\n      //         return item\n      //     })\n      //     this.setState({data: arr, loading: false})\n      // })\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target; // console.log(name, value)\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSyncSubmit = e => {\n      e.preventDefault();\n      const data = {\n        message: {\n          container_num: this.state.sync\n        },\n        q: \"testQ\"\n      };\n      axios.post(`http://localhost:8080/postMessage`, data).then(res => {\n        console.log(res.data); // alert(\"Data submitted with submission ID: \" + res.data.messageId)\n\n        res.data.serialNo = this.state.serialNo;\n        var arr = this.state.data;\n        console.log(res.data);\n        arr.push(res.data);\n        this.setState({\n          input: \"\"\n        });\n      }); // console.log(this.state.input)\n      // const data = this.state.data\n      // const filtered = data.containers.filter(item =>item.container_num === this.state.sync)\n      // console.log(filtered)\n      // this.setState({toDisplay: filtered[0]})\n    };\n\n    this.state = {\n      headers: ['Seq. No', 'messageId', 'correlationId', 'Message'],\n      seqNo: 1,\n      data: [],\n      loading: false,\n      messageLoading: {}\n    };\n  }\n\n  render() {\n    return this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        description: \"Active loading indicator\",\n        withOverlay: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          legendText: \"Sync Call\",\n          style: {\n            minWidth: '400px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            id: \"one\",\n            name: \"sync\",\n            value: this.state.sync,\n            labelText: \"Enter Container Num\",\n            onChange: this.handleChange,\n            placeholder: \"Enter Container Number\",\n            style: {\n              marginBottom: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleSyncSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50rem\",\n          textAlign: \"left\"\n        },\n        children: this.state.toDisplay ? /*#__PURE__*/_jsxDEV(ReactJson, {\n          src: this.state.toDisplay,\n          theme: \"solarized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: this.state.headers.map(header => /*#__PURE__*/_jsxDEV(TableHeader, {\n              children: header\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: this.state.data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.keys(row).filter(key => key !== 'id').map(key => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 36\n              }, this);\n            })\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Landing;","map":{"version":3,"sources":["/Users/kushagra/IBM/IBM MQ/app/web-app-a/src/components/Landing/Landing.js"],"names":["React","Table","TableHeader","TableRow","TableBody","TableCell","TableHead","Button","Loading","InlineLoading","FormGroup","TextInput","axios","ReactJson","Landing","Component","constructor","componentDidMount","handleChange","e","name","value","target","setState","handleSyncSubmit","preventDefault","data","message","container_num","state","sync","q","post","then","res","console","log","serialNo","arr","push","input","headers","seqNo","loading","messageLoading","render","minWidth","marginBottom","width","textAlign","toDisplay","map","header","row","Object","keys","filter","key","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Table, TableHeader, TableRow, TableBody, TableCell, TableHead} from 'carbon-components-react'\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios'\nimport ReactJson from 'react-json-view'\n\nclass Landing extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            headers:[\n                'Seq. No',\n                'messageId',\n                'correlationId',\n                'Message'\n            ],\n            seqNo:1,\n            data:[],\n            loading: false, \n            messageLoading:{}\n        }\n    }\n\n    componentDidMount = ()=>{\n        // axios.get('http://localhost:8080/getMessageList?q=testQ').then(async res=>{\n        //     console.log(res.data.data)\n        //     var msg = res.data.data.messages\n        //     console.log(msg)\n        //     var arr = await msg.map(item =>{\n        //         item.message = \n        //             <div>\n        //                 {this.state.messageLoading[item.messageId]?\n        //                     <InlineLoading description=\"Loading...\" />\n        //                     :\n        //                     <Button style={{margin:\".5rem\"}} onClick={()=>this.getMessage(item.messageId)}>Fetch</Button>\n        //                 }\n        //             </div>\n        //         return item\n        //     })\n        //     this.setState({data: arr, loading: false})\n        // })\n    }\n\n    handleChange = (e)=>{\n        const { name, value } = e.target\n        // console.log(name, value)\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSyncSubmit = (e)=>{\n        e.preventDefault()\n        const data = {\n            message: { container_num: this.state.sync },\n            q:\"testQ\"\n        }\n        axios.post(`http://localhost:8080/postMessage`, data)\n        .then(res=>{\n            console.log(res.data)\n            // alert(\"Data submitted with submission ID: \" + res.data.messageId)\n            res.data.serialNo = this.state.serialNo\n            var arr = this.state.data\n            console.log(res.data)\n            arr.push(res.data)\n            this.setState({input:\"\"})\n        })\n\n\n        // console.log(this.state.input)\n        // const data = this.state.data\n        // const filtered = data.containers.filter(item =>item.container_num === this.state.sync)\n        // console.log(filtered)\n        // this.setState({toDisplay: filtered[0]})\n    }\n\n    render(){\n      return (\n        this.state.loading?\n        <div>\n            <Loading\n            description=\"Active loading indicator\" withOverlay={false}\n            />        \n        </div>\n          : \n        <div>\n            <div>\n            <FormGroup legendText=\"Sync Call\" style={{ minWidth: '400px' }}>\n                <TextInput\n                id=\"one\"\n                name=\"sync\"\n                value={this.state.sync}\n                labelText=\"Enter Container Num\"\n                onChange={this.handleChange}\n                placeholder=\"Enter Container Number\"\n                style={{ marginBottom: '1rem' }}\n                />\n                <Button onClick={this.handleSyncSubmit}>Submit</Button>\n            </FormGroup>\n            </div>\n            <div style={{width:\"50rem\", textAlign:\"left\"}}>\n                {this.state.toDisplay?\n                    <ReactJson \n                        src={this.state.toDisplay} \n                        theme=\"solarized\"\n                    />\n                :\n                <></>\n                }\n            </div>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                    {this.state.headers.map((header) => (\n                        <TableHeader key={header}>{header}</TableHeader>\n                    ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {this.state.data.map((row) => (\n                    <TableRow key={row.id}>\n                        {Object.keys(row)\n                        .filter((key) => key !== 'id')\n                        .map((key) => {\n                            return <TableCell key={key}>{row[key]}</TableCell>;\n                        })}\n                    </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n      )\n    }\n};\nexport default Landing;"]},"metadata":{},"sourceType":"module"}