{"ast":null,"code":"var _jsxFileName = \"/Users/kushagra/IBM/IBM MQ/app/web-app-a/src/components/Landing/Landing.js\";\nimport React from 'react';\nimport { Table, TableHeader, TableRow, TableBody, TableCell, TableHead } from 'carbon-components-react';\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios';\nimport ReactJson from 'react-json-view';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      axios.get('http://localhost:8080/getMessageList?q=testQ').then(async res => {\n        console.log(res.data.data);\n        var msg = res.data.data.messages;\n        console.log(msg);\n        var arr = await msg.map(item => {\n          item.message = /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.messageLoading[item.messageId] ? /*#__PURE__*/_jsxDEV(InlineLoading, {\n              description: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: \".5rem\"\n              },\n              onClick: () => this.getMessage(item.messageId),\n              children: \"Fetch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this);\n          return item;\n        });\n        this.setState({\n          data: arr,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target; // console.log(name, value)\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSyncSubmit = e => {\n      let correlationId = _.times(48, () => (Math.random() * 0xF << 0).toString(16)).join('');\n\n      e.preventDefault();\n      const data = {\n        message: {\n          container_num: this.state.input\n        },\n        q: \"testQ\",\n        correlationId: correlationId\n      };\n      axios.post(`http://localhost:8080/postMessage`, data).then(res => {\n        console.log(res.data); // alert(\"Data submitted with submission ID: \" + res.data.messageId)\n\n        var arr = this.state.data;\n        const newData = {\n          seqNo: this.state.seqNo,\n          // messageId: res.data.messageId, \n          correlationId: correlationId,\n          message: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.messageLoading[correlationId] ? /*#__PURE__*/_jsxDEV(InlineLoading, {\n              description: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: \".5rem\"\n              },\n              onClick: () => this.handleFetch(correlationId),\n              children: \"Fetch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        };\n        arr.push(newData);\n        this.setState({\n          input: \"\",\n          seqNo: newData.seqNo + 1,\n          data: arr\n        });\n      });\n    };\n\n    this.handleFetch = cid => {\n      var loadState = this.state.messageLoading;\n      loadState[cid] = true;\n      this.setState({\n        messageLoading: loadState\n      });\n      axios.get(`http://localhost:8080/getMessageFromId?q=inputC&id=${cid}`).then(async res => {\n        console.log(res.data.data);\n        var arr = await this.state.data.map(item => {\n          if (item.correlationId === cid) item.message = JSON.stringify(res.data.data);\n          return item;\n        });\n        this.setState({\n          data: arr,\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      headers: [{\n        key: \"seqNo\",\n        header: \"Seq. No\"\n      }, // {\n      //     key:\"messageId\",\n      //     header:\"Message ID\"\n      // },\n      {\n        key: \"correlationId\",\n        header: \"Correlation ID\"\n      }, {\n        key: \"message\",\n        header: \"Message\"\n      }],\n      seqNo: 1,\n      data: [],\n      loading: false,\n      messageLoading: {}\n    };\n  }\n\n  render() {\n    return this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        description: \"Active loading indicator\",\n        withOverlay: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          legendText: \"Sync Call\",\n          style: {\n            minWidth: '400px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            id: \"one\",\n            name: \"input\",\n            value: this.state.input,\n            labelText: \"Enter Container Num\",\n            onChange: this.handleChange,\n            placeholder: \"Enter Container Number\",\n            style: {\n              marginBottom: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleSyncSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50rem\",\n          textAlign: \"left\"\n        },\n        children: this.state.toDisplay ? /*#__PURE__*/_jsxDEV(ReactJson, {\n          src: this.state.toDisplay,\n          theme: \"solarized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), this.state.data.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: this.state.headers.map(header => /*#__PURE__*/_jsxDEV(TableHeader, {\n              children: header.header\n            }, header.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: this.state.data.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: Object.keys(row).map(key => {\n              console.log(key);\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 40\n              }, this);\n            })\n          }, row.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Landing;","map":{"version":3,"sources":["/Users/kushagra/IBM/IBM MQ/app/web-app-a/src/components/Landing/Landing.js"],"names":["React","Table","TableHeader","TableRow","TableBody","TableCell","TableHead","Button","Loading","InlineLoading","FormGroup","TextInput","axios","ReactJson","_","Landing","Component","constructor","componentDidMount","get","then","res","console","log","data","msg","messages","arr","map","item","message","state","messageLoading","messageId","margin","getMessage","setState","loading","handleChange","e","name","value","target","handleSyncSubmit","correlationId","times","Math","random","toString","join","preventDefault","container_num","input","q","post","newData","seqNo","handleFetch","push","cid","loadState","JSON","stringify","headers","key","header","render","minWidth","marginBottom","width","textAlign","toDisplay","length","row","Object","keys"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Table, TableHeader, TableRow, TableBody, TableCell, TableHead} from 'carbon-components-react'\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios'\nimport ReactJson from 'react-json-view'\nimport _ from 'lodash'\n\nclass Landing extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            headers:[\n                {\n                    key:\"seqNo\",\n                    header:\"Seq. No\"\n                },\n                // {\n                //     key:\"messageId\",\n                //     header:\"Message ID\"\n                // },\n                {\n                    key:\"correlationId\",\n                    header:\"Correlation ID\"\n                },\n                {\n                    key:\"message\",\n                    header:\"Message\"\n                }\n            ],\n            seqNo:1,\n            data:[],\n            loading: false, \n            messageLoading:{}\n        }\n    }\n\n    componentDidMount = ()=>{\n        axios.get('http://localhost:8080/getMessageList?q=testQ').then(async res=>{\n            console.log(res.data.data)\n            var msg = res.data.data.messages\n            console.log(msg)\n            var arr = await msg.map(item =>{\n                item.message = \n                    <div>\n                        {this.state.messageLoading[item.messageId]?\n                            <InlineLoading description=\"Loading...\" />\n                            :\n                            <Button style={{margin:\".5rem\"}} onClick={()=>this.getMessage(item.messageId)}>Fetch</Button>\n                        }\n                    </div>\n                return item\n            })\n            this.setState({data: arr, loading: false})\n        })\n    }\n\n    handleChange = (e)=>{\n        const { name, value } = e.target\n        // console.log(name, value)\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSyncSubmit = (e)=>{\n\n        let correlationId = _.times(48, () => (Math.random()*0xF<<0).toString(16)).join('');\n        e.preventDefault()\n        const data = {\n            message: { container_num: this.state.input },\n            q:\"testQ\",\n            correlationId: correlationId,\n        }\n\n        axios.post(`http://localhost:8080/postMessage`, data)\n        .then(res=>{\n            console.log(res.data)\n            // alert(\"Data submitted with submission ID: \" + res.data.messageId)\n            var arr = this.state.data\n            const newData = {\n                seqNo: this.state.seqNo,\n                // messageId: res.data.messageId, \n                correlationId: correlationId,\n                message: [\n                    <div>\n                        {this.state.messageLoading[correlationId]?\n                            <InlineLoading description=\"Loading...\" />\n                            :\n                            <Button style={{margin:\".5rem\"}} onClick={()=>this.handleFetch(correlationId)}>Fetch</Button>\n                        }\n                    </div>\n                ]\n            }\n            arr.push(newData)\n            this.setState({input:\"\", seqNo: newData.seqNo+1, data:arr})\n        })\n    }\n\n    handleFetch = (cid) =>{\n        var loadState = this.state.messageLoading\n        loadState[cid] = true\n        this.setState({messageLoading: loadState})\n        axios.get(`http://localhost:8080/getMessageFromId?q=inputC&id=${cid}`).then(async res=>{\n            console.log(res.data.data)\n            var arr = await this.state.data.map(item =>{\n                if(item.correlationId === cid)\n                    item.message = JSON.stringify(res.data.data)\n                return item\n            })\n            this.setState({data: arr, loading: false})\n        })\n    }\n\n    render(){\n      return (\n        this.state.loading?\n        <div>\n            <Loading\n            description=\"Active loading indicator\" withOverlay={false}\n            />        \n        </div>\n          : \n        <div>\n            <div>\n            <FormGroup legendText=\"Sync Call\" style={{ minWidth: '400px' }}>\n                <TextInput\n                id=\"one\"\n                name=\"input\"\n                value={this.state.input}\n                labelText=\"Enter Container Num\"\n                onChange={this.handleChange}\n                placeholder=\"Enter Container Number\"\n                style={{ marginBottom: '1rem' }}\n                />\n                <Button onClick={this.handleSyncSubmit}>Submit</Button>\n            </FormGroup>\n            </div>\n            <div style={{width:\"50rem\", textAlign:\"left\"}}>\n                {this.state.toDisplay?\n                    <ReactJson \n                        src={this.state.toDisplay} \n                        theme=\"solarized\"\n                    />\n                :\n                <></>\n                }\n            </div>\n            {\n                this.state.data.length>0?\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                        {this.state.headers.map((header) => (\n                            <TableHeader key={header.key}>{header.header}</TableHeader>\n                        ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.data.map((row) => (\n                        <TableRow key={row.key}>\n                            {Object.keys(row)\n                            .map((key) => {\n                                console.log(key)\n                                return <TableCell key={key}>{row[key]}</TableCell>;\n                            })}\n                        </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>           \n                :\n                <></>\n            }\n        </div>\n      )\n    }\n};\nexport default Landing;"]},"metadata":{},"sourceType":"module"}