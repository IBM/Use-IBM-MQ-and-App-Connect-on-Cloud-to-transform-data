{"ast":null,"code":"/**\n * Copyright IBM Corp. 2015, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst enabled$1 = {};\n\ntry {\n  if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES) {\n    if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES === 'true') {\n      enabled$1.enableCssCustomProperties = true;\n    } else {\n      enabled$1.enableCssCustomProperties = false;\n    }\n  } else {\n    enabled$1.enableCssCustomProperties = false;\n  }\n\n  if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE) {\n    if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE === 'true') {\n      enabled$1.enableUseControlledStateWithValue = true;\n    } else {\n      enabled$1.enableUseControlledStateWithValue = false;\n    }\n  } else {\n    enabled$1.enableUseControlledStateWithValue = false;\n  }\n\n  if (process.env.CARBON_ENABLE_CSS_GRID) {\n    if (process.env.CARBON_ENABLE_CSS_GRID === 'true') {\n      enabled$1.enableCssGrid = true;\n    } else {\n      enabled$1.enableCssGrid = false;\n    }\n  } else {\n    enabled$1.enableCssGrid = false;\n  }\n\n  if (process.env.CARBON_ENABLE_2021_RELEASE) {\n    if (process.env.CARBON_ENABLE_2021_RELEASE === 'true') {\n      enabled$1.enable_2021Release = true;\n    } else {\n      enabled$1.enable_2021Release = false;\n    }\n  } else {\n    enabled$1.enable_2021Release = false;\n  }\n} catch (error) {\n  enabled$1.enableCssCustomProperties = false;\n  enabled$1.enableUseControlledStateWithValue = false;\n  enabled$1.enableCssGrid = false;\n  enabled$1.enable_2021Release = false;\n}\n\nconst featureFlagInfo = [{\n  name: \"enable-css-custom-properties\",\n  description: \"Describe what the flag does\",\n  enabled: enabled$1.enableCssCustomProperties\n}, {\n  name: \"enable-use-controlled-state-with-value\",\n  description: \"Enable components to be created in either a controlled or uncontrolled mode\\n\",\n  enabled: enabled$1.enableUseControlledStateWithValue\n}, {\n  name: \"enable-css-grid\",\n  description: \"Enable CSS Grid Layout in the Grid and Column React components\\n\",\n  enabled: enabled$1.enableCssGrid\n}, {\n  name: \"enable-2021-release\",\n  description: \"Enable the features and functionality for the 2021 Release\\n\",\n  enabled: enabled$1.enable_2021Release\n}];\n\nclass FeatureFlagScope {\n  constructor(flags) {\n    this.flags = new Map();\n\n    if (flags) {\n      Object.keys(flags).forEach(key => {\n        this.flags.set(key, flags[key]);\n      });\n    }\n  }\n  /**\n   * Check to see if a flag exists\n   * @param {string} name\n   */\n\n\n  checkForFlag(name) {\n    if (!this.flags.has(name)) {\n      throw new Error(`Unable to find a feature flag with the name: \\`${name}\\``);\n    }\n  }\n  /**\n   * Add a feature flag\n   * @param {string} name\n   * @param {boolean} enabled\n   */\n\n\n  add(name, enabled) {\n    if (this.flags.has(name)) {\n      throw new Error(`The feature flag: ${name} already exists`);\n    }\n\n    this.flags.set(name, enabled);\n  }\n  /**\n   * Enable a feature flag\n   * @param {string} name\n   */\n\n\n  enable(name) {\n    this.checkForFlag(name);\n    this.flags.set(name, true);\n  }\n  /**\n   * Disable a feature flag\n   * @param {string} name\n   */\n\n\n  disable(name) {\n    this.checkForFlag(name);\n    this.flags.set(name, false);\n  }\n  /**\n   * Merge the given feature flags with the current set of feature flags.\n   * Duplicate keys will be set to the value in the given feature flags.\n   * @param {object} flags\n   */\n\n\n  merge(flags) {\n    Object.keys(flags).forEach(key => {\n      this.flags.set(key, flags[key]);\n    });\n  }\n  /**\n   * @param {FeatureFlagScope} scope\n   */\n\n\n  mergeWithScope(scope) {\n    for (const [key, value] of scope.flags) {\n      if (this.flags.has(key)) {\n        continue;\n      }\n\n      this.flags.set(key, value);\n    }\n  }\n  /**\n   * Check if a feature flag is enabled\n   * @param {string} name\n   * @returns {boolean}\n   */\n\n\n  enabled(name) {\n    this.checkForFlag(name);\n    return this.flags.get(name);\n  }\n\n}\n\nconst FeatureFlags = createScope();\n\nfor (let i = 0; i < featureFlagInfo.length; i++) {\n  const featureFlag = featureFlagInfo[i];\n  FeatureFlags.add(featureFlag.name, featureFlag.enabled);\n}\n\nfunction createScope(flags) {\n  return new FeatureFlagScope(flags);\n}\n\nfunction add(...args) {\n  return FeatureFlags.add(...args);\n}\n\nfunction enable(...args) {\n  return FeatureFlags.enable(...args);\n}\n\nfunction disable(...args) {\n  return FeatureFlags.disable(...args);\n}\n\nfunction enabled(...args) {\n  return FeatureFlags.enabled(...args);\n}\n\nfunction merge(...args) {\n  return FeatureFlags.merge(...args);\n}\n\nexport { FeatureFlags, add, createScope, disable, enable, enabled, merge };","map":{"version":3,"sources":["/Users/kushagra/IBM/IBM MQ/app/web-app-a/node_modules/@carbon/feature-flags/es/index.js"],"names":["enabled$1","process","env","CARBON_ENABLE_CSS_CUSTOM_PROPERTIES","enableCssCustomProperties","CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE","enableUseControlledStateWithValue","CARBON_ENABLE_CSS_GRID","enableCssGrid","CARBON_ENABLE_2021_RELEASE","enable_2021Release","error","featureFlagInfo","name","description","enabled","FeatureFlagScope","constructor","flags","Map","Object","keys","forEach","key","set","checkForFlag","has","Error","add","enable","disable","merge","mergeWithScope","scope","value","get","FeatureFlags","createScope","i","length","featureFlag","args"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2015, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst enabled$1 = {};\n\ntry {\n  if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES) {\n    if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES === 'true') {\n      enabled$1.enableCssCustomProperties = true;\n    } else {\n      enabled$1.enableCssCustomProperties = false;\n    }\n  } else {\n    enabled$1.enableCssCustomProperties = false;\n  }\n\n  if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE) {\n    if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE === 'true') {\n      enabled$1.enableUseControlledStateWithValue = true;\n    } else {\n      enabled$1.enableUseControlledStateWithValue = false;\n    }\n  } else {\n    enabled$1.enableUseControlledStateWithValue = false;\n  }\n\n  if (process.env.CARBON_ENABLE_CSS_GRID) {\n    if (process.env.CARBON_ENABLE_CSS_GRID === 'true') {\n      enabled$1.enableCssGrid = true;\n    } else {\n      enabled$1.enableCssGrid = false;\n    }\n  } else {\n    enabled$1.enableCssGrid = false;\n  }\n\n  if (process.env.CARBON_ENABLE_2021_RELEASE) {\n    if (process.env.CARBON_ENABLE_2021_RELEASE === 'true') {\n      enabled$1.enable_2021Release = true;\n    } else {\n      enabled$1.enable_2021Release = false;\n    }\n  } else {\n    enabled$1.enable_2021Release = false;\n  }\n} catch (error) {\n  enabled$1.enableCssCustomProperties = false;\n  enabled$1.enableUseControlledStateWithValue = false;\n  enabled$1.enableCssGrid = false;\n  enabled$1.enable_2021Release = false;\n}\n\nconst featureFlagInfo = [{\n  name: \"enable-css-custom-properties\",\n  description: \"Describe what the flag does\",\n  enabled: enabled$1.enableCssCustomProperties\n}, {\n  name: \"enable-use-controlled-state-with-value\",\n  description: \"Enable components to be created in either a controlled or uncontrolled mode\\n\",\n  enabled: enabled$1.enableUseControlledStateWithValue\n}, {\n  name: \"enable-css-grid\",\n  description: \"Enable CSS Grid Layout in the Grid and Column React components\\n\",\n  enabled: enabled$1.enableCssGrid\n}, {\n  name: \"enable-2021-release\",\n  description: \"Enable the features and functionality for the 2021 Release\\n\",\n  enabled: enabled$1.enable_2021Release\n}];\n\nclass FeatureFlagScope {\n  constructor(flags) {\n    this.flags = new Map();\n\n    if (flags) {\n      Object.keys(flags).forEach((key) => {\n        this.flags.set(key, flags[key]);\n      });\n    }\n  }\n\n  /**\n   * Check to see if a flag exists\n   * @param {string} name\n   */\n  checkForFlag(name) {\n    if (!this.flags.has(name)) {\n      throw new Error(\n        `Unable to find a feature flag with the name: \\`${name}\\``\n      );\n    }\n  }\n\n  /**\n   * Add a feature flag\n   * @param {string} name\n   * @param {boolean} enabled\n   */\n  add(name, enabled) {\n    if (this.flags.has(name)) {\n      throw new Error(`The feature flag: ${name} already exists`);\n    }\n    this.flags.set(name, enabled);\n  }\n\n  /**\n   * Enable a feature flag\n   * @param {string} name\n   */\n  enable(name) {\n    this.checkForFlag(name);\n    this.flags.set(name, true);\n  }\n\n  /**\n   * Disable a feature flag\n   * @param {string} name\n   */\n  disable(name) {\n    this.checkForFlag(name);\n    this.flags.set(name, false);\n  }\n\n  /**\n   * Merge the given feature flags with the current set of feature flags.\n   * Duplicate keys will be set to the value in the given feature flags.\n   * @param {object} flags\n   */\n  merge(flags) {\n    Object.keys(flags).forEach((key) => {\n      this.flags.set(key, flags[key]);\n    });\n  }\n\n  /**\n   * @param {FeatureFlagScope} scope\n   */\n  mergeWithScope(scope) {\n    for (const [key, value] of scope.flags) {\n      if (this.flags.has(key)) {\n        continue;\n      }\n      this.flags.set(key, value);\n    }\n  }\n\n  /**\n   * Check if a feature flag is enabled\n   * @param {string} name\n   * @returns {boolean}\n   */\n  enabled(name) {\n    this.checkForFlag(name);\n    return this.flags.get(name);\n  }\n}\n\nconst FeatureFlags = createScope();\n\nfor (let i = 0; i < featureFlagInfo.length; i++) {\n  const featureFlag = featureFlagInfo[i];\n  FeatureFlags.add(featureFlag.name, featureFlag.enabled);\n}\n\nfunction createScope(flags) {\n  return new FeatureFlagScope(flags);\n}\n\nfunction add(...args) {\n  return FeatureFlags.add(...args);\n}\n\nfunction enable(...args) {\n  return FeatureFlags.enable(...args);\n}\n\nfunction disable(...args) {\n  return FeatureFlags.disable(...args);\n}\n\nfunction enabled(...args) {\n  return FeatureFlags.enabled(...args);\n}\n\nfunction merge(...args) {\n  return FeatureFlags.merge(...args);\n}\n\nexport { FeatureFlags, add, createScope, disable, enable, enabled, merge };\n"]},"metadata":{},"sourceType":"module"}