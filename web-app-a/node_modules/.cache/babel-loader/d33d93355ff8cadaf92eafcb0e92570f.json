{"ast":null,"code":"import { int, pad } from \"../utils\";\n\nconst doNothing = () => undefined;\n\nexport const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\nexport const revFormat = {\n  D: doNothing,\n  F: function (dateObj, monthName, locale) {\n    dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n  },\n  G: (dateObj, hour) => {\n    dateObj.setHours(parseFloat(hour));\n  },\n  H: (dateObj, hour) => {\n    dateObj.setHours(parseFloat(hour));\n  },\n  J: (dateObj, day) => {\n    dateObj.setDate(parseFloat(day));\n  },\n  K: (dateObj, amPM, locale) => {\n    dateObj.setHours(dateObj.getHours() % 12 + 12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n  },\n  M: function (dateObj, shortMonth, locale) {\n    dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n  },\n  S: (dateObj, seconds) => {\n    dateObj.setSeconds(parseFloat(seconds));\n  },\n  U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n  W: function (dateObj, weekNum, locale) {\n    const weekNumber = parseInt(weekNum);\n    const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n    return date;\n  },\n  Y: (dateObj, year) => {\n    dateObj.setFullYear(parseFloat(year));\n  },\n  Z: (_, ISODate) => new Date(ISODate),\n  d: (dateObj, day) => {\n    dateObj.setDate(parseFloat(day));\n  },\n  h: (dateObj, hour) => {\n    dateObj.setHours(parseFloat(hour));\n  },\n  i: (dateObj, minutes) => {\n    dateObj.setMinutes(parseFloat(minutes));\n  },\n  j: (dateObj, day) => {\n    dateObj.setDate(parseFloat(day));\n  },\n  l: doNothing,\n  m: (dateObj, month) => {\n    dateObj.setMonth(parseFloat(month) - 1);\n  },\n  n: (dateObj, month) => {\n    dateObj.setMonth(parseFloat(month) - 1);\n  },\n  s: (dateObj, seconds) => {\n    dateObj.setSeconds(parseFloat(seconds));\n  },\n  u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n  w: doNothing,\n  y: (dateObj, year) => {\n    dateObj.setFullYear(2000 + parseFloat(year));\n  }\n};\nexport const tokenRegex = {\n  D: \"(\\\\w+)\",\n  F: \"(\\\\w+)\",\n  G: \"(\\\\d\\\\d|\\\\d)\",\n  H: \"(\\\\d\\\\d|\\\\d)\",\n  J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n  K: \"\",\n  M: \"(\\\\w+)\",\n  S: \"(\\\\d\\\\d|\\\\d)\",\n  U: \"(.+)\",\n  W: \"(\\\\d\\\\d|\\\\d)\",\n  Y: \"(\\\\d{4})\",\n  Z: \"(.+)\",\n  d: \"(\\\\d\\\\d|\\\\d)\",\n  h: \"(\\\\d\\\\d|\\\\d)\",\n  i: \"(\\\\d\\\\d|\\\\d)\",\n  j: \"(\\\\d\\\\d|\\\\d)\",\n  l: \"(\\\\w+)\",\n  m: \"(\\\\d\\\\d|\\\\d)\",\n  n: \"(\\\\d\\\\d|\\\\d)\",\n  s: \"(\\\\d\\\\d|\\\\d)\",\n  u: \"(.+)\",\n  w: \"(\\\\d\\\\d|\\\\d)\",\n  y: \"(\\\\d{2})\"\n};\nexport const formats = {\n  Z: date => date.toISOString(),\n  D: function (date, locale, options) {\n    return locale.weekdays.shorthand[formats.w(date, locale, options)];\n  },\n  F: function (date, locale, options) {\n    return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n  },\n  G: function (date, locale, options) {\n    return pad(formats.h(date, locale, options));\n  },\n  H: date => pad(date.getHours()),\n  J: function (date, locale) {\n    return locale.ordinal !== undefined ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();\n  },\n  K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n  M: function (date, locale) {\n    return monthToStr(date.getMonth(), true, locale);\n  },\n  S: date => pad(date.getSeconds()),\n  U: date => date.getTime() / 1000,\n  W: function (date, _, options) {\n    return options.getWeek(date);\n  },\n  Y: date => pad(date.getFullYear(), 4),\n  d: date => pad(date.getDate()),\n  h: date => date.getHours() % 12 ? date.getHours() % 12 : 12,\n  i: date => pad(date.getMinutes()),\n  j: date => date.getDate(),\n  l: function (date, locale) {\n    return locale.weekdays.longhand[date.getDay()];\n  },\n  m: date => pad(date.getMonth() + 1),\n  n: date => date.getMonth() + 1,\n  s: date => date.getSeconds(),\n  u: date => date.getTime(),\n  w: date => date.getDay(),\n  y: date => String(date.getFullYear()).substring(2)\n};","map":{"version":3,"sources":["/Users/kushagra/IBM/IBM MQ/app/web-app-a/node_modules/carbon-components-react/node_modules/flatpickr/dist/esm/utils/formatting.js"],"names":["int","pad","doNothing","undefined","monthToStr","monthNumber","shorthand","locale","months","revFormat","D","F","dateObj","monthName","setMonth","longhand","indexOf","G","hour","setHours","parseFloat","H","J","day","setDate","K","amPM","getHours","RegExp","test","M","shortMonth","S","seconds","setSeconds","U","_","unixSeconds","Date","W","weekNum","weekNumber","parseInt","date","getFullYear","getDate","getDay","firstDayOfWeek","Y","year","setFullYear","Z","ISODate","d","h","i","minutes","setMinutes","j","l","m","month","n","s","u","unixMillSeconds","w","y","tokenRegex","formats","toISOString","options","weekdays","ordinal","getMonth","getSeconds","getTime","getWeek","getMinutes","String","substring"],"mappings":"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","sourcesContent":["import { int, pad } from \"../utils\";\nconst doNothing = () => undefined;\nexport const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\nexport const revFormat = {\n    D: doNothing,\n    F: function (dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n    },\n    G: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    H: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    J: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    K: (dateObj, amPM, locale) => {\n        dateObj.setHours((dateObj.getHours() % 12) +\n            12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n    },\n    M: function (dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n    },\n    S: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n    W: function (dateObj, weekNum, locale) {\n        const weekNumber = parseInt(weekNum);\n        const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n        date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n        return date;\n    },\n    Y: (dateObj, year) => {\n        dateObj.setFullYear(parseFloat(year));\n    },\n    Z: (_, ISODate) => new Date(ISODate),\n    d: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    h: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    i: (dateObj, minutes) => {\n        dateObj.setMinutes(parseFloat(minutes));\n    },\n    j: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    l: doNothing,\n    m: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    n: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    s: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n    w: doNothing,\n    y: (dateObj, year) => {\n        dateObj.setFullYear(2000 + parseFloat(year));\n    },\n};\nexport const tokenRegex = {\n    D: \"(\\\\w+)\",\n    F: \"(\\\\w+)\",\n    G: \"(\\\\d\\\\d|\\\\d)\",\n    H: \"(\\\\d\\\\d|\\\\d)\",\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n    K: \"\",\n    M: \"(\\\\w+)\",\n    S: \"(\\\\d\\\\d|\\\\d)\",\n    U: \"(.+)\",\n    W: \"(\\\\d\\\\d|\\\\d)\",\n    Y: \"(\\\\d{4})\",\n    Z: \"(.+)\",\n    d: \"(\\\\d\\\\d|\\\\d)\",\n    h: \"(\\\\d\\\\d|\\\\d)\",\n    i: \"(\\\\d\\\\d|\\\\d)\",\n    j: \"(\\\\d\\\\d|\\\\d)\",\n    l: \"(\\\\w+)\",\n    m: \"(\\\\d\\\\d|\\\\d)\",\n    n: \"(\\\\d\\\\d|\\\\d)\",\n    s: \"(\\\\d\\\\d|\\\\d)\",\n    u: \"(.+)\",\n    w: \"(\\\\d\\\\d|\\\\d)\",\n    y: \"(\\\\d{2})\",\n};\nexport const formats = {\n    Z: (date) => date.toISOString(),\n    D: function (date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n    },\n    F: function (date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n    },\n    G: function (date, locale, options) {\n        return pad(formats.h(date, locale, options));\n    },\n    H: (date) => pad(date.getHours()),\n    J: function (date, locale) {\n        return locale.ordinal !== undefined\n            ? date.getDate() + locale.ordinal(date.getDate())\n            : date.getDate();\n    },\n    K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n    M: function (date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n    },\n    S: (date) => pad(date.getSeconds()),\n    U: (date) => date.getTime() / 1000,\n    W: function (date, _, options) {\n        return options.getWeek(date);\n    },\n    Y: (date) => pad(date.getFullYear(), 4),\n    d: (date) => pad(date.getDate()),\n    h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n    i: (date) => pad(date.getMinutes()),\n    j: (date) => date.getDate(),\n    l: function (date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n    },\n    m: (date) => pad(date.getMonth() + 1),\n    n: (date) => date.getMonth() + 1,\n    s: (date) => date.getSeconds(),\n    u: (date) => date.getTime(),\n    w: (date) => date.getDay(),\n    y: (date) => String(date.getFullYear()).substring(2),\n};\n"]},"metadata":{},"sourceType":"module"}