{"ast":null,"code":"import _slicedToArray from \"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * Copyright IBM Corp. 2015, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar enabled$1 = {};\n\ntry {\n  if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES) {\n    if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES === 'true') {\n      enabled$1.enableCssCustomProperties = true;\n    } else {\n      enabled$1.enableCssCustomProperties = false;\n    }\n  } else {\n    enabled$1.enableCssCustomProperties = false;\n  }\n\n  if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE) {\n    if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE === 'true') {\n      enabled$1.enableUseControlledStateWithValue = true;\n    } else {\n      enabled$1.enableUseControlledStateWithValue = false;\n    }\n  } else {\n    enabled$1.enableUseControlledStateWithValue = false;\n  }\n\n  if (process.env.CARBON_ENABLE_CSS_GRID) {\n    if (process.env.CARBON_ENABLE_CSS_GRID === 'true') {\n      enabled$1.enableCssGrid = true;\n    } else {\n      enabled$1.enableCssGrid = false;\n    }\n  } else {\n    enabled$1.enableCssGrid = false;\n  }\n\n  if (process.env.CARBON_ENABLE_2021_RELEASE) {\n    if (process.env.CARBON_ENABLE_2021_RELEASE === 'true') {\n      enabled$1.enable_2021Release = true;\n    } else {\n      enabled$1.enable_2021Release = false;\n    }\n  } else {\n    enabled$1.enable_2021Release = false;\n  }\n} catch (error) {\n  enabled$1.enableCssCustomProperties = false;\n  enabled$1.enableUseControlledStateWithValue = false;\n  enabled$1.enableCssGrid = false;\n  enabled$1.enable_2021Release = false;\n}\n\nvar featureFlagInfo = [{\n  name: \"enable-css-custom-properties\",\n  description: \"Describe what the flag does\",\n  enabled: enabled$1.enableCssCustomProperties\n}, {\n  name: \"enable-use-controlled-state-with-value\",\n  description: \"Enable components to be created in either a controlled or uncontrolled mode\\n\",\n  enabled: enabled$1.enableUseControlledStateWithValue\n}, {\n  name: \"enable-css-grid\",\n  description: \"Enable CSS Grid Layout in the Grid and Column React components\\n\",\n  enabled: enabled$1.enableCssGrid\n}, {\n  name: \"enable-2021-release\",\n  description: \"Enable the features and functionality for the 2021 Release\\n\",\n  enabled: enabled$1.enable_2021Release\n}];\n\nvar FeatureFlagScope = /*#__PURE__*/function () {\n  function FeatureFlagScope(flags) {\n    var _this = this;\n\n    _classCallCheck(this, FeatureFlagScope);\n\n    this.flags = new Map();\n\n    if (flags) {\n      Object.keys(flags).forEach(function (key) {\n        _this.flags.set(key, flags[key]);\n      });\n    }\n  }\n  /**\n   * Check to see if a flag exists\n   * @param {string} name\n   */\n\n\n  _createClass(FeatureFlagScope, [{\n    key: \"checkForFlag\",\n    value: function checkForFlag(name) {\n      if (!this.flags.has(name)) {\n        throw new Error(\"Unable to find a feature flag with the name: `\".concat(name, \"`\"));\n      }\n    }\n    /**\n     * Add a feature flag\n     * @param {string} name\n     * @param {boolean} enabled\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(name, enabled) {\n      if (this.flags.has(name)) {\n        throw new Error(\"The feature flag: \".concat(name, \" already exists\"));\n      }\n\n      this.flags.set(name, enabled);\n    }\n    /**\n     * Enable a feature flag\n     * @param {string} name\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable(name) {\n      this.checkForFlag(name);\n      this.flags.set(name, true);\n    }\n    /**\n     * Disable a feature flag\n     * @param {string} name\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable(name) {\n      this.checkForFlag(name);\n      this.flags.set(name, false);\n    }\n    /**\n     * Merge the given feature flags with the current set of feature flags.\n     * Duplicate keys will be set to the value in the given feature flags.\n     * @param {object} flags\n     */\n\n  }, {\n    key: \"merge\",\n    value: function merge(flags) {\n      var _this2 = this;\n\n      Object.keys(flags).forEach(function (key) {\n        _this2.flags.set(key, flags[key]);\n      });\n    }\n    /**\n     * @param {FeatureFlagScope} scope\n     */\n\n  }, {\n    key: \"mergeWithScope\",\n    value: function mergeWithScope(scope) {\n      var _iterator = _createForOfIteratorHelper(scope.flags),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              value = _step$value[1];\n\n          if (this.flags.has(key)) {\n            continue;\n          }\n\n          this.flags.set(key, value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    /**\n     * Check if a feature flag is enabled\n     * @param {string} name\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"enabled\",\n    value: function enabled(name) {\n      this.checkForFlag(name);\n      return this.flags.get(name);\n    }\n  }]);\n\n  return FeatureFlagScope;\n}();\n\nvar FeatureFlags = createScope();\n\nfor (var i = 0; i < featureFlagInfo.length; i++) {\n  var featureFlag = featureFlagInfo[i];\n  FeatureFlags.add(featureFlag.name, featureFlag.enabled);\n}\n\nfunction createScope(flags) {\n  return new FeatureFlagScope(flags);\n}\n\nfunction add() {\n  return FeatureFlags.add.apply(FeatureFlags, arguments);\n}\n\nfunction enable() {\n  return FeatureFlags.enable.apply(FeatureFlags, arguments);\n}\n\nfunction disable() {\n  return FeatureFlags.disable.apply(FeatureFlags, arguments);\n}\n\nfunction enabled() {\n  return FeatureFlags.enabled.apply(FeatureFlags, arguments);\n}\n\nfunction merge() {\n  return FeatureFlags.merge.apply(FeatureFlags, arguments);\n}\n\nexport { FeatureFlags, add, createScope, disable, enable, enabled, merge };","map":{"version":3,"sources":["/Users/kushagra/IBM/Use-IBM-MQ-and-App-Connect-on-Cloud-to-transform-data/web-app-a/node_modules/@carbon/feature-flags/es/index.js"],"names":["enabled$1","process","env","CARBON_ENABLE_CSS_CUSTOM_PROPERTIES","enableCssCustomProperties","CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE","enableUseControlledStateWithValue","CARBON_ENABLE_CSS_GRID","enableCssGrid","CARBON_ENABLE_2021_RELEASE","enable_2021Release","error","featureFlagInfo","name","description","enabled","FeatureFlagScope","flags","Map","Object","keys","forEach","key","set","has","Error","checkForFlag","scope","value","get","FeatureFlags","createScope","i","length","featureFlag","add","enable","disable","merge"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2015, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst enabled$1 = {};\n\ntry {\n  if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES) {\n    if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES === 'true') {\n      enabled$1.enableCssCustomProperties = true;\n    } else {\n      enabled$1.enableCssCustomProperties = false;\n    }\n  } else {\n    enabled$1.enableCssCustomProperties = false;\n  }\n\n  if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE) {\n    if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE === 'true') {\n      enabled$1.enableUseControlledStateWithValue = true;\n    } else {\n      enabled$1.enableUseControlledStateWithValue = false;\n    }\n  } else {\n    enabled$1.enableUseControlledStateWithValue = false;\n  }\n\n  if (process.env.CARBON_ENABLE_CSS_GRID) {\n    if (process.env.CARBON_ENABLE_CSS_GRID === 'true') {\n      enabled$1.enableCssGrid = true;\n    } else {\n      enabled$1.enableCssGrid = false;\n    }\n  } else {\n    enabled$1.enableCssGrid = false;\n  }\n\n  if (process.env.CARBON_ENABLE_2021_RELEASE) {\n    if (process.env.CARBON_ENABLE_2021_RELEASE === 'true') {\n      enabled$1.enable_2021Release = true;\n    } else {\n      enabled$1.enable_2021Release = false;\n    }\n  } else {\n    enabled$1.enable_2021Release = false;\n  }\n} catch (error) {\n  enabled$1.enableCssCustomProperties = false;\n  enabled$1.enableUseControlledStateWithValue = false;\n  enabled$1.enableCssGrid = false;\n  enabled$1.enable_2021Release = false;\n}\n\nconst featureFlagInfo = [{\n  name: \"enable-css-custom-properties\",\n  description: \"Describe what the flag does\",\n  enabled: enabled$1.enableCssCustomProperties\n}, {\n  name: \"enable-use-controlled-state-with-value\",\n  description: \"Enable components to be created in either a controlled or uncontrolled mode\\n\",\n  enabled: enabled$1.enableUseControlledStateWithValue\n}, {\n  name: \"enable-css-grid\",\n  description: \"Enable CSS Grid Layout in the Grid and Column React components\\n\",\n  enabled: enabled$1.enableCssGrid\n}, {\n  name: \"enable-2021-release\",\n  description: \"Enable the features and functionality for the 2021 Release\\n\",\n  enabled: enabled$1.enable_2021Release\n}];\n\nclass FeatureFlagScope {\n  constructor(flags) {\n    this.flags = new Map();\n\n    if (flags) {\n      Object.keys(flags).forEach((key) => {\n        this.flags.set(key, flags[key]);\n      });\n    }\n  }\n\n  /**\n   * Check to see if a flag exists\n   * @param {string} name\n   */\n  checkForFlag(name) {\n    if (!this.flags.has(name)) {\n      throw new Error(\n        `Unable to find a feature flag with the name: \\`${name}\\``\n      );\n    }\n  }\n\n  /**\n   * Add a feature flag\n   * @param {string} name\n   * @param {boolean} enabled\n   */\n  add(name, enabled) {\n    if (this.flags.has(name)) {\n      throw new Error(`The feature flag: ${name} already exists`);\n    }\n    this.flags.set(name, enabled);\n  }\n\n  /**\n   * Enable a feature flag\n   * @param {string} name\n   */\n  enable(name) {\n    this.checkForFlag(name);\n    this.flags.set(name, true);\n  }\n\n  /**\n   * Disable a feature flag\n   * @param {string} name\n   */\n  disable(name) {\n    this.checkForFlag(name);\n    this.flags.set(name, false);\n  }\n\n  /**\n   * Merge the given feature flags with the current set of feature flags.\n   * Duplicate keys will be set to the value in the given feature flags.\n   * @param {object} flags\n   */\n  merge(flags) {\n    Object.keys(flags).forEach((key) => {\n      this.flags.set(key, flags[key]);\n    });\n  }\n\n  /**\n   * @param {FeatureFlagScope} scope\n   */\n  mergeWithScope(scope) {\n    for (const [key, value] of scope.flags) {\n      if (this.flags.has(key)) {\n        continue;\n      }\n      this.flags.set(key, value);\n    }\n  }\n\n  /**\n   * Check if a feature flag is enabled\n   * @param {string} name\n   * @returns {boolean}\n   */\n  enabled(name) {\n    this.checkForFlag(name);\n    return this.flags.get(name);\n  }\n}\n\nconst FeatureFlags = createScope();\n\nfor (let i = 0; i < featureFlagInfo.length; i++) {\n  const featureFlag = featureFlagInfo[i];\n  FeatureFlags.add(featureFlag.name, featureFlag.enabled);\n}\n\nfunction createScope(flags) {\n  return new FeatureFlagScope(flags);\n}\n\nfunction add(...args) {\n  return FeatureFlags.add(...args);\n}\n\nfunction enable(...args) {\n  return FeatureFlags.enable(...args);\n}\n\nfunction disable(...args) {\n  return FeatureFlags.disable(...args);\n}\n\nfunction enabled(...args) {\n  return FeatureFlags.enabled(...args);\n}\n\nfunction merge(...args) {\n  return FeatureFlags.merge(...args);\n}\n\nexport { FeatureFlags, add, createScope, disable, enable, enabled, merge };\n"]},"metadata":{},"sourceType":"module"}