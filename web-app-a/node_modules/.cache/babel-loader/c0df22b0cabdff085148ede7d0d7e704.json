{"ast":null,"code":"var _jsxFileName = \"/Users/kushagra/IBM/IBM MQ/app/web-app-a/src/components/Landing/Landing.js\";\nimport React from 'react';\nimport { Table, TableHeader, TableRow, TableBody, TableCell, TableHead } from 'carbon-components-react';\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios';\nimport JSONViewer from 'react-json-viewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      axios.get('http://localhost:8080/getMessageList').then(async res => {\n        console.log(res.data.data);\n        var msg = res.data.data.messages;\n        console.log(msg);\n        var arr = await msg.map(item => {\n          item.message = /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.messageLoading[item.messageId] ? /*#__PURE__*/_jsxDEV(InlineLoading, {\n              description: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: \".5rem\"\n              },\n              onClick: () => this.getMessage(item.messageId),\n              children: \"Fetch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this);\n          return item;\n        });\n        this.setState({\n          data: arr,\n          loading: false\n        });\n      });\n    };\n\n    this.getMessage = id => {\n      var loadState = this.state.messageLoading;\n      loadState[id] = true;\n      var arr = this.state.data.map(item => {\n        item.message = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: loadState[item.messageId] ? /*#__PURE__*/_jsxDEV(InlineLoading, {\n            description: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this) : item.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this);\n        return item;\n      });\n      this.setState({\n        data: arr\n      });\n      this.setState({\n        messageLoading: loadState\n      });\n      console.log('clicked', id);\n      axios.get(`http://localhost:8080/getMessageFromId?id=${id}`).then(res => {\n        console.log(res.data);\n        var data = this.state.data;\n        data = data.map(item => {\n          if (item.messageId === id) {\n            item.message = res.data.data;\n            var loadState = this.state.messageLoading;\n            loadState[id] = false;\n            this.setState({\n              messageLoading: loadState\n            });\n          }\n\n          return item;\n        });\n        this.setState({\n          data\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target; // console.log(name, value)\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSyncSubmit = e => {\n      e.preventDefault(); // console.log(this.state.input)\n\n      const data = {\n        container_num: this.state.sync\n      };\n      axios.post(`http://localhost:8080/postSyncMessage`, data).then(res => {\n        console.log(res.data);\n        alert(\"Data submitted with submission ID: \" + res.data.messageId);\n        this.setState({\n          sync: \"\"\n        }); // var data = this.state.data\n        // data = data.map(item =>{\n        //     if(item.messageId === id){\n        //         item.message = res.data.data\n        //         var loadState = this.state.messageLoading\n        //         loadState[id] = false\n        //         this.setState({messageLoading:loadState})\n        //     }\n        //     return item\n        // })\n      });\n    };\n\n    this.state = {\n      headers: ['Seq. No', 'messageId', 'Message'],\n      loading: true,\n      messageLoading: {}\n    };\n  }\n\n  render() {\n    return this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        description: \"Active loading indicator\",\n        withOverlay: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          legendText: \"Sync Call\",\n          style: {\n            minWidth: '400px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            id: \"one\",\n            name: \"sync\",\n            value: this.state.sync,\n            labelText: \"Enter Container Num\",\n            onChange: this.handleChange,\n            placeholder: \"Enter Container Number\",\n            style: {\n              marginBottom: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleSyncSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(JSONViewer, {\n          json: [{\n            task: 'Learn React',\n            done: true\n          }, {\n            task: 'Write Book',\n            done: false\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default Landing;","map":{"version":3,"sources":["/Users/kushagra/IBM/IBM MQ/app/web-app-a/src/components/Landing/Landing.js"],"names":["React","Table","TableHeader","TableRow","TableBody","TableCell","TableHead","Button","Loading","InlineLoading","FormGroup","TextInput","axios","JSONViewer","Landing","Component","constructor","componentDidMount","get","then","res","console","log","data","msg","messages","arr","map","item","message","state","messageLoading","messageId","margin","getMessage","setState","loading","id","loadState","handleChange","e","name","value","target","handleSyncSubmit","preventDefault","container_num","sync","post","alert","headers","render","minWidth","marginBottom","task","done"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Table, TableHeader, TableRow, TableBody, TableCell, TableHead} from 'carbon-components-react'\nimport { Button, Loading, InlineLoading, FormGroup, TextInput } from 'carbon-components-react';\nimport axios from 'axios'\nimport JSONViewer from 'react-json-viewer';\n\nclass Landing extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            headers:[\n                'Seq. No',\n                'messageId',\n                'Message'\n            ],\n            loading: true, \n            messageLoading:{}\n        }\n    }\n\n    componentDidMount = ()=>{\n        axios.get('http://localhost:8080/getMessageList').then(async res=>{\n            console.log(res.data.data)\n            var msg = res.data.data.messages\n            console.log(msg)\n            var arr = await msg.map(item =>{\n                item.message = \n                    <div>\n                        {this.state.messageLoading[item.messageId]?\n                            <InlineLoading description=\"Loading...\" />\n                            :\n                            <Button style={{margin:\".5rem\"}} onClick={()=>this.getMessage(item.messageId)}>Fetch</Button>\n                        }\n                    </div>\n                return item\n            })\n            this.setState({data: arr, loading: false})\n        })\n    }\n\n    getMessage = (id)=>{\n        var loadState = this.state.messageLoading\n        loadState[id] = true\n        var arr = this.state.data.map(item =>{\n            item.message = \n                <div>\n                    {loadState[item.messageId]?\n                        <InlineLoading description=\"Loading...\" />\n                        :\n                        item.message\n                    }\n                </div>\n            return item\n        })\n        this.setState({data: arr})\n        this.setState({messageLoading: loadState})\n        console.log('clicked', id)\n        axios.get(`http://localhost:8080/getMessageFromId?id=${id}`).then(res=>{\n            console.log(res.data)\n            var data = this.state.data\n            data = data.map(item =>{\n                if(item.messageId === id){\n                    item.message = res.data.data\n                    var loadState = this.state.messageLoading\n                    loadState[id] = false\n                    this.setState({messageLoading:loadState})\n                }\n                return item\n            })\n            this.setState({data})\n        })\n    }\n\n    handleChange = (e)=>{\n        const { name, value } = e.target\n        // console.log(name, value)\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSyncSubmit = (e)=>{\n        e.preventDefault()\n        // console.log(this.state.input)\n        const data = {\n            container_num: this.state.sync\n        }\n        axios.post(`http://localhost:8080/postSyncMessage`, data).then(res=>{\n            console.log(res.data)\n            alert(\"Data submitted with submission ID: \" + res.data.messageId)\n            this.setState({sync:\"\"})\n            // var data = this.state.data\n            // data = data.map(item =>{\n            //     if(item.messageId === id){\n            //         item.message = res.data.data\n            //         var loadState = this.state.messageLoading\n            //         loadState[id] = false\n            //         this.setState({messageLoading:loadState})\n            //     }\n            //     return item\n            // })\n        })\n    }\n\n    render(){\n      return (\n        this.state.loading?\n        <div>\n            <Loading\n            description=\"Active loading indicator\" withOverlay={false}\n            />        \n        </div>\n          : \n        <div>\n            <div>\n            <FormGroup legendText=\"Sync Call\" style={{ minWidth: '400px' }}>\n                <TextInput\n                id=\"one\"\n                name=\"sync\"\n                value={this.state.sync}\n                labelText=\"Enter Container Num\"\n                onChange={this.handleChange}\n                placeholder=\"Enter Container Number\"\n                style={{ marginBottom: '1rem' }}\n                />\n                <Button onClick={this.handleSyncSubmit}>Submit</Button>\n            </FormGroup>\n            </div>\n            <div>\n            <JSONViewer\n                json={[\n                {\n                    task: 'Learn React',\n                    done: true,\n                },\n                {\n                    task: 'Write Book',\n                    done: false,\n                },\n                ]}\n            />\n            </div>\n        </div>\n      )\n    }\n};\nexport default Landing;"]},"metadata":{},"sourceType":"module"}